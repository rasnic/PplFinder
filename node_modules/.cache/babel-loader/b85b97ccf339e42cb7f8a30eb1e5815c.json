{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nexport const useCountryFetch = () => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    fetchCountries();\n  }, []);\n\n  async function fetchCountries() {\n    let c = {};\n    let cArr = [];\n\n    for (let i = 0; i < users.length; i++) {\n      if (!c[users[i].location.country]) {\n        c[users[i].location.country] = 1;\n        cArr.push({\n          [users[i].location.country]: users[i].location.country\n        });\n      }\n    }\n\n    setCountries(cArr);\n    console.log(countries);\n  }\n\n  return {\n    countries,\n    fetchCountries\n  };\n};\n\n_s(useCountryFetch, \"u5xOCJaVOCLA9QSfvEC1BLxOVIw=\");","map":{"version":3,"sources":["/home/gal/vsc/PplFinder/src/hooks/useCountryFetch.js"],"names":["useState","useEffect","axios","useCountryFetch","countries","setCountries","fetchCountries","c","cArr","i","users","length","location","country","push","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AAAA;;AACrC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAChBK,IAAAA,cAAc;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIC,iBAAeA,cAAf,GAA+B;AAC5B,QAAIC,CAAC,GAAG,EAAR;AACE,QAAIC,IAAI,GAAG,EAAX;;AACE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,KAAK,CAACC,MAA1B,EAAkCF,CAAC,EAAnC,EAAuC;AACrC,UAAI,CAACF,CAAC,CAACG,KAAK,CAACD,CAAD,CAAL,CAASG,QAAT,CAAkBC,OAAnB,CAAN,EAAmC;AACjCN,QAAAA,CAAC,CAACG,KAAK,CAACD,CAAD,CAAL,CAASG,QAAT,CAAkBC,OAAnB,CAAD,GAA+B,CAA/B;AACAL,QAAAA,IAAI,CAACM,IAAL,CAAU;AAAC,WAACJ,KAAK,CAACD,CAAD,CAAL,CAASG,QAAT,CAAkBC,OAAnB,GAA6BH,KAAK,CAACD,CAAD,CAAL,CAASG,QAAT,CAAkBC;AAAhD,SAAV;AACD;AACJ;;AACDR,IAAAA,YAAY,CAACG,IAAD,CAAZ;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAZ;AACD;;AACL,SAAO;AACPA,IAAAA,SADO;AACIE,IAAAA;AADJ,GAAP;AAEC,CArBM;;GAAMH,e","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport const useCountryFetch = () => {\nconst [countries, setCountries] = useState([]);\n\nuseEffect(() => {\nfetchCountries()\n}, []);\n\n async function fetchCountries(){\n    let c = {};\n      let cArr = [];\n        for (let i = 0; i < users.length; i++) {\n          if (!c[users[i].location.country]) {\n            c[users[i].location.country] = 1;\n            cArr.push({[users[i].location.country]: users[i].location.country})\n          }\n      }\n      setCountries(cArr);\n      console.log(countries);\n    }\nreturn {\ncountries, fetchCountries };\n};"]},"metadata":{},"sourceType":"module"}