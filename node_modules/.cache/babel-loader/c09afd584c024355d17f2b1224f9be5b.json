{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nexport const useCountryFetch = users => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    fetchCountries(users);\n  }, []);\n\n  async function fetchCountries(usrs) {\n    let c = {};\n    let cArr = [];\n\n    for (let i = 0; i < usrs.length; i++) {\n      if (!c[usrs[i].location.country]) {\n        c[usrs[i].location.country] = 1;\n        cArr.push({\n          [usrs[i].location.country]: usrs[i].location.country\n        });\n      }\n    }\n\n    setCountries(cArr);\n    console.log(countries);\n  }\n\n  return {\n    countries,\n    fetchCountries\n  };\n};\n\n_s(useCountryFetch, \"u5xOCJaVOCLA9QSfvEC1BLxOVIw=\");","map":{"version":3,"sources":["/home/gal/vsc/PplFinder/src/hooks/useCountryFetch.js"],"names":["useState","useEffect","useCountryFetch","users","countries","setCountries","fetchCountries","usrs","c","cArr","i","length","location","country","push","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAGA,OAAO,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAChBK,IAAAA,cAAc,CAACH,KAAD,CAAd;AACC,GAFQ,EAEN,EAFM,CAAT;;AAIC,iBAAeG,cAAf,CAA8BC,IAA9B,EAAmC;AAChC,QAAIC,CAAC,GAAG,EAAR;AACE,QAAIC,IAAI,GAAG,EAAX;;AACE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,UAAI,CAACF,CAAC,CAACD,IAAI,CAACG,CAAD,CAAJ,CAAQE,QAAR,CAAiBC,OAAlB,CAAN,EAAkC;AAChCL,QAAAA,CAAC,CAACD,IAAI,CAACG,CAAD,CAAJ,CAAQE,QAAR,CAAiBC,OAAlB,CAAD,GAA8B,CAA9B;AACAJ,QAAAA,IAAI,CAACK,IAAL,CAAU;AAAC,WAACP,IAAI,CAACG,CAAD,CAAJ,CAAQE,QAAR,CAAiBC,OAAlB,GAA4BN,IAAI,CAACG,CAAD,CAAJ,CAAQE,QAAR,CAAiBC;AAA9C,SAAV;AACD;AACJ;;AACDR,IAAAA,YAAY,CAACI,IAAD,CAAZ;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAZ;AACD;;AACL,SAAO;AAACA,IAAAA,SAAD;AAAYE,IAAAA;AAAZ,GAAP;AACC,CApBM;;GAAMJ,e","sourcesContent":["import { useState, useEffect } from \"react\";\n\n\nexport const useCountryFetch = (users) => {\nconst [countries, setCountries] = useState([]);\n\nuseEffect(() => {\nfetchCountries(users);\n}, []);\n\n async function fetchCountries(usrs){\n    let c = {};\n      let cArr = [];\n        for (let i = 0; i < usrs.length; i++) {\n          if (!c[usrs[i].location.country]) {\n            c[usrs[i].location.country] = 1;\n            cArr.push({[usrs[i].location.country]: usrs[i].location.country})\n          }\n      }\n      setCountries(cArr);\n      console.log(countries);\n    }\nreturn {countries, fetchCountries };\n};"]},"metadata":{},"sourceType":"module"}