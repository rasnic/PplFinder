{"ast":null,"code":"var _jsxFileName = \"/home/gal/vsc/PplFinder/src/components/UserList/UserList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Text from \"components/Text\";\nimport Spinner from \"components/Spinner\";\nimport CheckBox from \"components/CheckBox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport * as S from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserList = ({\n  users,\n  isLoading\n}) => {\n  _s();\n\n  const [hoveredUserId, setHoveredUserId] = useState();\n  const [countries, setCountries] = useState();\n  useEffect(() => {\n    if (users) {\n      fetchCountries();\n    }\n  }, []);\n\n  const handleMouseEnter = index => {\n    setHoveredUserId(index);\n  };\n\n  const handleMouseLeave = () => {\n    setHoveredUserId();\n  };\n\n  async function fetchCountries() {\n    let cObj = {};\n    let cArr = [];\n\n    for (let i = 0; i < users.length; i++) {\n      if (!cObj[users[i].location.country]) {\n        cObj[users[i].location.country] = 1;\n        cArr.push(users[i].location.country);\n      }\n    }\n\n    setCountries(cArr);\n  }\n\n  return /*#__PURE__*/_jsxDEV(S.UserList, {\n    children: [/*#__PURE__*/_jsxDEV(S.Filters, {\n      children: [\"if (this.users) \", countries.map((country, index) => {\n        return /*#__PURE__*/_jsxDEV(CheckBox, {\n          value: country,\n          label: country\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(CheckBox, {\n        value: \"BR\",\n        label: \"Brazil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CheckBox, {\n        value: \"AU\",\n        label: \"Australia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CheckBox, {\n        value: \"CA\",\n        label: \"Canada\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CheckBox, {\n        value: \"DE\",\n        label: \"Germany\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.List, {\n      children: [users.map((user, index) => {\n        return /*#__PURE__*/_jsxDEV(S.User, {\n          onMouseEnter: () => handleMouseEnter(index),\n          onMouseLeave: handleMouseLeave,\n          children: [/*#__PURE__*/_jsxDEV(S.UserPicture, {\n            src: user === null || user === void 0 ? void 0 : user.picture.large,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(S.UserInfo, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              size: \"22px\",\n              bold: true,\n              children: [user === null || user === void 0 ? void 0 : user.name.title, \" \", user === null || user === void 0 ? void 0 : user.name.first, \" \", user === null || user === void 0 ? void 0 : user.name.last]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              size: \"14px\",\n              children: user === null || user === void 0 ? void 0 : user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              size: \"14px\",\n              children: [user === null || user === void 0 ? void 0 : user.location.street.number, \" \", user === null || user === void 0 ? void 0 : user.location.street.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              size: \"14px\",\n              children: [user === null || user === void 0 ? void 0 : user.location.city, \" \", user === null || user === void 0 ? void 0 : user.location.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(S.IconButtonWrapper, {\n            isVisible: index === hoveredUserId,\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              children: /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n                color: \"error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this);\n      }), isLoading && /*#__PURE__*/_jsxDEV(S.SpinnerWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          color: \"primary\",\n          size: \"45px\",\n          thickness: 6,\n          variant: \"indeterminate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserList, \"j0S/e8hBPIGnQSgfO+IrctK5+Kk=\");\n\n_c = UserList;\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/home/gal/vsc/PplFinder/src/components/UserList/UserList.js"],"names":["React","useEffect","useState","Text","Spinner","CheckBox","IconButton","FavoriteIcon","S","UserList","users","isLoading","hoveredUserId","setHoveredUserId","countries","setCountries","fetchCountries","handleMouseEnter","index","handleMouseLeave","cObj","cArr","i","length","location","country","push","map","user","picture","large","name","title","first","last","email","street","number","city"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Text from \"components/Text\";\nimport Spinner from \"components/Spinner\";\nimport CheckBox from \"components/CheckBox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport * as S from \"./style\";\n\nconst UserList = ({ users, isLoading }) => {\n  const [hoveredUserId, setHoveredUserId] = useState();\n  const [countries, setCountries] = useState();\n\n\n  useEffect(()=>{\n    if(users){\n    fetchCountries()}\n  }, [])\n\n  const handleMouseEnter = (index) => {\n    setHoveredUserId(index);\n  };\n\n  const handleMouseLeave = () => {\n    setHoveredUserId();\n  };\n\n  async function fetchCountries(){\n  let cObj = {};\n    let cArr = [];\n      for (let i = 0; i < users.length; i++) {\n        if (!cObj[users[i].location.country]) {\n          cObj[users[i].location.country] = 1;\n          cArr.push(users[i].location.country)\n        }\n    }\n    setCountries(cArr);\n  }\n\n  return (\n    <S.UserList>\n      <S.Filters>\n        if (this.users) {\n         countries.map((country, index) =>{\n          return(\n            <CheckBox key={index} value={country} label={country} />\n          )\n        })} \n        <CheckBox value=\"BR\" label=\"Brazil\" />\n        <CheckBox value=\"AU\" label=\"Australia\" />\n        <CheckBox value=\"CA\" label=\"Canada\" />\n        <CheckBox value=\"DE\" label=\"Germany\" />\n      </S.Filters>\n      <S.List>\n        {users.map((user, index) => {\n          return (\n            <S.User\n              key={index}\n              onMouseEnter={() => handleMouseEnter(index)}\n              onMouseLeave={handleMouseLeave}\n            >\n              <S.UserPicture src={user?.picture.large} alt=\"\" />\n              <S.UserInfo>\n                <Text size=\"22px\" bold>\n                  {user?.name.title} {user?.name.first} {user?.name.last}\n                </Text>\n                <Text size=\"14px\">{user?.email}</Text>\n                <Text size=\"14px\">\n                  {user?.location.street.number} {user?.location.street.name}\n                </Text>\n                <Text size=\"14px\">\n                  {user?.location.city} {user?.location.country}\n                </Text>\n              </S.UserInfo>\n              <S.IconButtonWrapper isVisible={index === hoveredUserId}>\n                <IconButton>\n                  <FavoriteIcon color=\"error\" />\n                </IconButton>\n              </S.IconButtonWrapper>\n            </S.User>\n          );\n        })}\n        {isLoading && (\n          <S.SpinnerWrapper>\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\n          </S.SpinnerWrapper>\n        )}\n      </S.List>\n    </S.UserList>\n  );\n};\n\nexport default UserList;\n"]},"metadata":{},"sourceType":"module"}