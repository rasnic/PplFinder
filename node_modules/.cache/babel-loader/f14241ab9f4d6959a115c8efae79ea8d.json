{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nexport const usePeopleFetch = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    fetchUsers().then(u => fetchCountries(u));\n  }, []);\n\n  async function fetchUsers() {\n    setIsLoading(true);\n    debugger;\n\n    if (!localStorage) {\n      console.log(localStorage);\n      const response = await axios.get(`https://randomuser.me/api/?results=25&page=1`);\n      setUsers(response.data.results);\n      localStorage.setItem(\"users\", JSON.stringify(response.data.results));\n      return await response.data.results;\n    }\n  }\n\n  function fetchCountries(us) {\n    let c = {};\n    let cArr = [];\n\n    for (let i = 0; i < us.length; i++) {\n      if (!c[us[i].location.country]) {\n        c[us[i].location.country] = 1;\n        cArr.push(us[i].location.country);\n      }\n    }\n\n    setCountries(cArr);\n    setIsLoading(false);\n  }\n\n  return {\n    users,\n    isLoading,\n    fetchUsers,\n    countries,\n    fetchCountries\n  };\n};\n\n_s(usePeopleFetch, \"yMK9E8XUQ9yVzjimCYM42B50NvQ=\");","map":{"version":3,"sources":["/home/gal/vsc/PplFinder/src/hooks/usePeopleFetch.js"],"names":["useState","useEffect","axios","usePeopleFetch","users","setUsers","isLoading","setIsLoading","countries","setCountries","fetchUsers","then","u","fetchCountries","localStorage","console","log","response","get","data","results","setItem","JSON","stringify","us","c","cArr","i","length","location","country","push"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAClC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,UAAU,GAAGC,IAAb,CAAmBC,CAAD,IAAOC,cAAc,CAACD,CAAD,CAAvC;AACD,GAFQ,EAEN,EAFM,CAAT;;AAKA,iBAAeF,UAAf,GAA4B;AAC1BH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA;;AACA,QAAI,CAACO,YAAL,EAAmB;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACF,YAAMG,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAW,8CAAX,CAAvB;AACAb,MAAAA,QAAQ,CAACY,QAAQ,CAACE,IAAT,CAAcC,OAAf,CAAR;AACEN,MAAAA,YAAY,CAACO,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACE,IAAT,CAAcC,OAA7B,CAA9B;AACF,aAAO,MAAMH,QAAQ,CAACE,IAAT,CAAcC,OAA3B;AACC;AAEF;;AAED,WAASP,cAAT,CAAwBW,EAAxB,EAA2B;AACzB,QAAIC,CAAC,GAAG,EAAR;AACC,QAAIC,IAAI,GAAG,EAAX;;AACE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,EAAE,CAACI,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAClC,UAAI,CAACF,CAAC,CAACD,EAAE,CAACG,CAAD,CAAF,CAAME,QAAN,CAAeC,OAAhB,CAAN,EAAgC;AAC9BL,QAAAA,CAAC,CAACD,EAAE,CAACG,CAAD,CAAF,CAAME,QAAN,CAAeC,OAAhB,CAAD,GAA4B,CAA5B;AACAJ,QAAAA,IAAI,CAACK,IAAL,CAAUP,EAAE,CAACG,CAAD,CAAF,CAAME,QAAN,CAAeC,OAAzB;AACD;AACD;;AACJrB,IAAAA,YAAY,CAACiB,IAAD,CAAZ;AACAnB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAGF,SAAO;AAAEH,IAAAA,KAAF;AAASE,IAAAA,SAAT;AAAoBI,IAAAA,UAApB;AAAgCF,IAAAA,SAAhC;AAA2CK,IAAAA;AAA3C,GAAP;AACD,CAtCM;;GAAMV,c","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport const usePeopleFetch = () => {\n  const [users, setUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    fetchUsers().then((u) => fetchCountries(u));\n  }, []);\n\n\n  async function fetchUsers() {\n    setIsLoading(true);\n    debugger\n    if (!localStorage) {\n      console.log(localStorage);\n    const response = await axios.get(`https://randomuser.me/api/?results=25&page=1`);\n    setUsers(response.data.results);\n      localStorage.setItem(\"users\", JSON.stringify(response.data.results))\n    return await response.data.results\n    }\n    \n  }\n\n  function fetchCountries(us){\n    let c = {};\n     let cArr = [];\n       for (let i = 0; i < us.length; i++) {\n         if (!c[us[i].location.country]) {\n           c[us[i].location.country] = 1;\n           cArr.push(us[i].location.country)\n         }\n        }\n     setCountries(cArr);\n     setIsLoading(false);\n   }\n   \n  \n  return { users, isLoading, fetchUsers ,countries, fetchCountries };\n};\n"]},"metadata":{},"sourceType":"module"}